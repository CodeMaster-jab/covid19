'use strict';
<<<<<<< HEAD
const errorEx = require('error-ex');
const fallback = require('json-parse-better-errors');

const JSONError = errorEx('JSONError', {
	fileName: errorEx.append('in %s')
});

module.exports = (input, reviver, filename) => {
=======
var errorEx = require('error-ex');
var fallback = require('./vendor/parse');

var JSONError = errorEx('JSONError', {
	fileName: errorEx.append('in %s')
});

module.exports = function (x, reviver, filename) {
>>>>>>> 37d774246a886414ad3dcaef6f0d5ef6c08bf9d8
	if (typeof reviver === 'string') {
		filename = reviver;
		reviver = null;
	}

	try {
		try {
<<<<<<< HEAD
			return JSON.parse(input, reviver);
		} catch (err) {
			fallback(input, reviver);
=======
			return JSON.parse(x, reviver);
		} catch (err) {
			fallback.parse(x, {
				mode: 'json',
				reviver: reviver
			});
>>>>>>> 37d774246a886414ad3dcaef6f0d5ef6c08bf9d8

			throw err;
		}
	} catch (err) {
<<<<<<< HEAD
		err.message = err.message.replace(/\n/g, '');

		const jsonErr = new JSONError(err);
=======
		var jsonErr = new JSONError(err);

>>>>>>> 37d774246a886414ad3dcaef6f0d5ef6c08bf9d8
		if (filename) {
			jsonErr.fileName = filename;
		}

		throw jsonErr;
	}
};
